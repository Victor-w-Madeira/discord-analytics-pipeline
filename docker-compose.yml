version: '3.8'

services:
  discord-analytics-bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: discord-analytics-pipeline
    restart: unless-stopped
    
    # Environment variables from .env file
    environment:
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - TARGET_SERVER_ID=${TARGET_SERVER_ID}
      - BIGQUERY_PROJECT_ID=${BIGQUERY_PROJECT_ID}
      - BIGQUERY_DATASET_ID=${BIGQUERY_DATASET_ID}
      - GOOGLE_SERVICE_ACCOUNT_INFO=${GOOGLE_SERVICE_ACCOUNT_INFO}
      - MEMBER_UPDATE_INTERVAL=${MEMBER_UPDATE_INTERVAL:-60}
      - MESSAGE_UPDATE_INTERVAL=${MESSAGE_UPDATE_INTERVAL:-60}
      - VOICE_UPDATE_INTERVAL=${VOICE_UPDATE_INTERVAL:-60}
      - THREAD_UPDATE_INTERVAL=${THREAD_UPDATE_INTERVAL:-720}
      - PRESENCE_UPDATE_INTERVAL=${PRESENCE_UPDATE_INTERVAL:-1440}
    
    # Mount logs directory for persistence
    volumes:
      - ./logs:/app/logs
      - /etc/localtime:/etc/localtime:ro  # Sync container time with host
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Monitoring with Prometheus (uncomment if needed)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: discord-analytics-prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=200h'
  #     - '--web.enable-lifecycle'
  #   restart: unless-stopped

# Optional: Named volumes
# volumes:
#   prometheus_data: